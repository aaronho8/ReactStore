{"ast":null,"code":"var _jsxFileName = \"/Users/aaronho/Desktop/reactstore2/src/App.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport \"./App.css\";\nimport Counters from \"./components/counters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  get bank() {\n    //function that initializes value of bank, loops through counter array and subtracts value from bank for each index in counter array\n    let bank = 100;\n\n    for (let i = 0; i < this.state.counters.length; i++) {\n      bank = bank - this.state.counters[i].cost * this.state.counters[i].value;\n    }\n\n    return bank;\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0,\n        cost: 1\n      }, //each counter component\n      {\n        id: 2,\n        value: 0,\n        cost: 5\n      }, {\n        id: 3,\n        value: 0,\n        cost: 10\n      }, {\n        id: 4,\n        value: 0,\n        cost: 20\n      }]\n    };\n    this.handleReset = this.handleReset.bind(this); //need to bind functions for proper use if called by a child\n\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleIncrement(counter) {\n    const counters = [...this.state.counters]; //clone array\n\n    const index = counters.indexOf(counter); //get index of counter\n\n    counters[index] = { ...counter\n    }; //clone counter object that is the received argument\n\n    counters[index].value++; //increment value\n\n    this.setState({\n      counters\n    }); //set the new counter object\n  }\n\n  handleDelete(counter) {\n    const counters = [...this.state.counters]; //clone array\n\n    const index = counters.indexOf(counter); //get index of counter\n\n    counters[index] = { ...counter\n    }; //clone counter object that is the received argument\n\n    counters[index].value--; //increment value\n\n    this.setState({\n      counters\n    }); //set the new counter object\n  }\n\n  handleReset() {\n    const counters = this.state.counters.map(c => {\n      c.value = 0; //for loop where for c in counters\n\n      return c;\n    });\n    this.setState({\n      counters\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        bank: this.bank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Counters, {\n          counters: this.state.counters,\n          onReset: this.handleReset,\n          onIncrement: this.handleIncrement,\n          onDelete: this.handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aaronho/Desktop/reactstore2/src/App.js"],"names":["React","Component","NavBar","Counters","App","bank","i","state","counters","length","cost","value","constructor","id","handleReset","bind","handleIncrement","handleDelete","counter","index","indexOf","setState","map","c","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport \"./App.css\";\nimport Counters from \"./components/counters\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0, cost: 1 }, //each counter component\n      { id: 2, value: 0, cost: 5 },\n      { id: 3, value: 0, cost: 10 },\n      { id: 4, value: 0, cost: 20 },\n    ],\n  };\n\n  get bank() {\n    //function that initializes value of bank, loops through counter array and subtracts value from bank for each index in counter array\n    let bank = 100;\n    for (let i = 0; i < this.state.counters.length; i++) {\n      bank = bank - this.state.counters[i].cost * this.state.counters[i].value;\n    }\n    return bank;\n  }\n\n  constructor() {\n    super();\n    this.handleReset = this.handleReset.bind(this); //need to bind functions for proper use if called by a child\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleIncrement(counter) {\n    const counters = [...this.state.counters]; //clone array\n    const index = counters.indexOf(counter); //get index of counter\n    counters[index] = { ...counter }; //clone counter object that is the received argument\n    counters[index].value++; //increment value\n    this.setState({ counters }); //set the new counter object\n  }\n\n  handleDelete(counter) {\n    const counters = [...this.state.counters]; //clone array\n    const index = counters.indexOf(counter); //get index of counter\n    counters[index] = { ...counter }; //clone counter object that is the received argument\n    counters[index].value--; //increment value\n    this.setState({ counters }); //set the new counter object\n  }\n\n  handleReset() {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0; //for loop where for c in counters\n      return c;\n    });\n    this.setState({ counters });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar bank={this.bank} />\n        <main className=\"container\">\n          <Counters\n            counters={this.state.counters}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onDelete={this.handleDelete}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}