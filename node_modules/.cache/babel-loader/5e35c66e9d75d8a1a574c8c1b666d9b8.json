{"ast":null,"code":"var _jsxFileName = \"/Users/aaronho/Desktop/reactstore2/src/App.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport \"./App.css\";\nimport Counters from \"./components/counters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0,\n        cost: 1\n      }, //each counter component\n      {\n        id: 2,\n        value: 0,\n        cost: 5\n      }, {\n        id: 3,\n        value: 0,\n        cost: 10\n      }, {\n        id: 4,\n        value: 0,\n        cost: 20\n      }],\n      bank: 100\n    };\n    this.handleReset = this.handleReset.bind(this); //need to bind functions for proper use if called by a child\n\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  calculateBank(nextprops, nextstate) {\n    let state = { ...nextstate\n    };\n  }\n\n  handleIncrement(counter) {\n    const counters = [...this.state.counters]; //clone array\n\n    const index = counters.indexOf(counter); //get index of counter\n\n    counters[index] = { ...counter\n    }; //clone counter object that is the received argument\n\n    counters[index].value++; //increment value\n\n    this.setState({\n      counters\n    }); //set the new counter object\n  }\n\n  handleDelete(counter) {\n    const counters = [...this.state.counters]; //clone array\n\n    const index = counters.indexOf(counter); //get index of counter\n\n    counters[index] = { ...counter\n    }; //clone counter object that is the received argument\n\n    counters[index].value--; //increment value\n\n    this.setState({\n      counters\n    }); //set the new counter object\n  }\n\n  handleReset() {\n    const counters = this.state.counters.map(c => {\n      c.value = 0; //for loop where for c in counters\n\n      return c;\n    });\n    this.setState({\n      counters\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        bank: this.state.bank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Counters, {\n          counters: this.state.counters,\n          onReset: this.handleReset,\n          onIncrement: this.handleIncrement,\n          onDelete: this.handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aaronho/Desktop/reactstore2/src/App.js"],"names":["React","Component","NavBar","Counters","App","constructor","state","counters","id","value","cost","bank","handleReset","bind","handleIncrement","handleDelete","calculateBank","nextprops","nextstate","counter","index","indexOf","setState","map","c","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport \"./App.css\";\nimport Counters from \"./components/counters\";\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0, cost: 1 }, //each counter component\n      { id: 2, value: 0, cost: 5 },\n      { id: 3, value: 0, cost: 10 },\n      { id: 4, value: 0, cost: 20 },\n    ],\n    bank: 100,\n  };\n\n  constructor() {\n    super();\n    this.handleReset = this.handleReset.bind(this); //need to bind functions for proper use if called by a child\n    this.handleIncrement = this.handleIncrement.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  calculateBank(nextprops, nextstate) {\n    let state = { ...nextstate };\n  }\n\n  handleIncrement(counter) {\n    const counters = [...this.state.counters]; //clone array\n    const index = counters.indexOf(counter); //get index of counter\n    counters[index] = { ...counter }; //clone counter object that is the received argument\n    counters[index].value++; //increment value\n    this.setState({ counters }); //set the new counter object\n  }\n\n  handleDelete(counter) {\n    const counters = [...this.state.counters]; //clone array\n    const index = counters.indexOf(counter); //get index of counter\n    counters[index] = { ...counter }; //clone counter object that is the received argument\n    counters[index].value--; //increment value\n    this.setState({ counters }); //set the new counter object\n  }\n\n  handleReset() {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0; //for loop where for c in counters\n      return c;\n    });\n    this.setState({ counters });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar bank={this.state.bank} />\n        <main className=\"container\">\n          <Counters\n            counters={this.state.counters}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onDelete={this.handleDelete}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}