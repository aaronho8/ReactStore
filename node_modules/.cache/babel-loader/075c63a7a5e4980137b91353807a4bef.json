{"ast":null,"code":"var _jsxFileName = \"/Users/aaronho/Desktop/reactstore2/src/components/counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counters extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, //each counter component\n      {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n    this.handleReset = this.handleReset.bind(this); //need to bind functions for proper use if called by a child\n\n    this.handleReset = this.handleIncrement.bind(this);\n    this.handleReset = this.handleDelete.bind(this);\n  }\n\n  handleIncrement(counter) {\n    const counters = [...this.state.counters]; //clone array\n  }\n\n  handleDelete(counter) {}\n\n  handleReset() {\n    const counters = this.state.counters.map(c => {\n      c.value = 0; //for loop where for c in counters\n\n      return c;\n    });\n    this.setState({\n      counters\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleReset //when button is clicked reset\n        ,\n        className: \"btn btn-primary btn-sm m-2\" //button styling\n        ,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), this.state.counters.map(counter => /*#__PURE__*/_jsxDEV(Counter, {\n        onIncrement: this.handleIncrement //call increment function from counter.jsx\n        ,\n        onDelete: this.handleDelete,\n        counter: counter\n      }, counter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/Users/aaronho/Desktop/reactstore2/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","constructor","state","counters","id","value","handleReset","bind","handleIncrement","handleDelete","counter","map","c","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAU/BG,EAAAA,WAAW,GAAG;AACZ;AADY,SATdC,KASc,GATN;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADQ,EACa;AACrB;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFQ,EAGR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHQ,EAIR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJQ;AADJ,KASM;AAEZ,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB,CAFY,CAEoC;;AAChD,SAAKD,WAAL,GAAmB,KAAKE,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAnB;AACA,SAAKD,WAAL,GAAmB,KAAKG,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAAnB;AACD;;AAEDC,EAAAA,eAAe,CAACE,OAAD,EAAU;AACvB,UAAMP,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB,CADuB,CACoB;AAC5C;;AAEDM,EAAAA,YAAY,CAACC,OAAD,EAAU,CAAE;;AAExBJ,EAAAA,WAAW,GAAG;AACZ,UAAMH,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBQ,GAApB,CAAyBC,CAAD,IAAO;AAC9CA,MAAAA,CAAC,CAACP,KAAF,GAAU,CAAV,CAD8C,CACjC;;AACb,aAAOO,CAAP;AACD,KAHgB,CAAjB;AAIA,SAAKC,QAAL,CAAc;AAAEV,MAAAA;AAAF,KAAd;AACD;;AACDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AACE,QAAA,OAAO,EAAE,KAAKR,WADhB,CAC6B;AAD7B;AAEE,QAAA,SAAS,EAAC,4BAFZ,CAEyC;AAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOG,KAAKJ,KAAL,CAAWC,QAAX,CAAoBQ,GAApB,CAAyBD,OAAD,iBACvB,QAAC,OAAD;AAEE,QAAA,WAAW,EAAE,KAAKF,eAFpB,CAEqC;AAFrC;AAGE,QAAA,QAAQ,EAAE,KAAKC,YAHjB;AAIE,QAAA,OAAO,EAAEC;AAJX,SACOA,OAAO,CAACN,EADf;AAAA;AAAA;AAAA;AAAA,cADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAjD8B;;AAoDjC,eAAeJ,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 4 }, //each counter component\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n  constructor() {\n    super();\n    this.handleReset = this.handleReset.bind(this); //need to bind functions for proper use if called by a child\n    this.handleReset = this.handleIncrement.bind(this);\n    this.handleReset = this.handleDelete.bind(this);\n  }\n\n  handleIncrement(counter) {\n    const counters = [...this.state.counters]; //clone array\n  }\n\n  handleDelete(counter) {}\n\n  handleReset() {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0; //for loop where for c in counters\n      return c;\n    });\n    this.setState({ counters });\n  }\n  render() {\n    return (\n      <div>\n        <button\n          onClick={this.handleReset} //when button is clicked reset\n          className=\"btn btn-primary btn-sm m-2\" //button styling\n        >\n          Reset\n        </button>\n        {this.state.counters.map((counter) => (\n          <Counter\n            key={counter.id}\n            onIncrement={this.handleIncrement} //call increment function from counter.jsx\n            onDelete={this.handleDelete}\n            counter={counter}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}