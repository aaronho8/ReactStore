{"ast":null,"code":"var _jsxFileName = \"/Users/aaronho/Desktop/reactstore2/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 1,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n  }\n\n  render() {\n    let classes = this.getBadgeClasses();\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes,\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 \";\n\n    if (this.state.count === 0) {\n      classes = classes + \"bg-warning\";\n    } else if (this.state.count !== 0) {\n      classes = classes + \"bg-primary\";\n    }\n\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n\n    if (count === 0) {\n      return \"Zero\";\n    } else {\n      return count;\n    }\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/aaronho/Desktop/reactstore2/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","render","classes","getBadgeClasses","formatCount","map","tag"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KADsB;AAAA;;AAM9BC,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAG,KAAKC,eAAL,EAAd;AAEA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAM,QAAA,SAAS,EAAED,OAAjB;AAAA,kBAA2B,KAAKE,WAAL;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBACG,KAAKN,KAAL,CAAWE,IAAX,CAAgBK,GAAhB,CAAqBC,GAAD,iBACnB;AAAA,oBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAEDH,EAAAA,eAAe,GAAG;AAChB,QAAID,OAAO,GAAG,YAAd;;AACA,QAAI,KAAKJ,KAAL,CAAWC,KAAX,KAAqB,CAAzB,EAA4B;AAC1BG,MAAAA,OAAO,GAAGA,OAAO,GAAG,YAApB;AACD,KAFD,MAEO,IAAI,KAAKJ,KAAL,CAAWC,KAAX,KAAqB,CAAzB,EAA4B;AACjCG,MAAAA,OAAO,GAAGA,OAAO,GAAG,YAApB;AACD;;AACD,WAAOA,OAAP;AACD;;AAEDE,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEL,MAAAA;AAAF,QAAY,KAAKD,KAAvB;;AACA,QAAIC,KAAK,KAAK,CAAd,EAAiB;AACf,aAAO,MAAP;AACD,KAFD,MAEO;AACL,aAAOA,KAAP;AACD;AACF;;AAvC6B;;AA0ChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  state = {\n    count: 1,\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\n  };\n\n  render() {\n    let classes = this.getBadgeClasses();\n\n    return (\n      <React.Fragment>\n        <span className={classes}>{this.formatCount()}</span>\n        <button className=\"btn btn-secondary btn-sm\">Increment</button>\n        <ul>\n          {this.state.tags.map((tag) => (\n            <li>{tag}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 \";\n    if (this.state.count === 0) {\n      classes = classes + \"bg-warning\";\n    } else if (this.state.count !== 0) {\n      classes = classes + \"bg-primary\";\n    }\n    return classes;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n    if (count === 0) {\n      return \"Zero\";\n    } else {\n      return count;\n    }\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}